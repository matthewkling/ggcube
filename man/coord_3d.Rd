% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coord-3d.R
\name{coord_3d}
\alias{coord_3d}
\title{3D coordinate system}
\usage{
coord_3d(
  pitch = -30,
  roll = 30,
  yaw = 0,
  persp = TRUE,
  dist = 3,
  expand = TRUE,
  clip = "off",
  faces = "background",
  auto_text_orientation = TRUE,
  xtext = "auto",
  ytext = "auto",
  ztext = "auto"
)
}
\arguments{
\item{pitch}{Rotation around x-axis in degrees. Positive values rotate "up" towards viewer.}

\item{roll}{Rotation around y-axis in degrees. Positive values rotate "right" edge towards viewer.}

\item{yaw}{Rotation around z-axis in degrees. Positive values rotate counterclockwise when viewed from above.}

\item{persp}{Logical indicating whether to apply perspective projection. When \code{TRUE},
objects farther from the viewer appear smaller.}

\item{dist}{Distance from viewer to center of the data cube when \code{persp = TRUE}.
Larger values create less perspective distortion.}

\item{expand}{Logical indicating whether to expand axis ranges beyond the data range,
similar to standard ggplot2 behavior.}

\item{clip}{Character string indicating clipping behavior. Use \code{"off"} to allow
drawing outside the plot panel (recommended for 3D plots).}

\item{faces}{Character string specifying which cube faces to render. Options include
\code{"all"}, \code{"background"}, \code{"foreground"}, or specific face names like
\code{"xmin"}, \code{"ymax"}, etc.}

\item{auto_text_orientation}{Logical indicating whether axis text should automatically
rotate to align with the projected axis directions. When \code{FALSE}, uses theme
text angle settings.}

\item{xtext, ytext, ztext}{Character strings or length-2 character vectors specifying
axis label placement. Use \code{"auto"} for automatic selection, or specify
\code{c("face1", "face2")} to place labels on the edge shared by those faces.}
}
\value{
A list containing the coordinate system object and default theme modifications.
When added to a ggplot, provides 3D projection and appropriate plot margins.
}
\description{
\code{coord_3d} creates a 3D coordinate system that projects 3D data onto a 2D plot.
It supports rotation, perspective projection, and automatic axis labeling with
intelligent edge selection for optimal readability.
}
\examples{
library(ggplot2)

# Basic 3D scatterplot
ggplot(mtcars, aes(mpg, wt, z = qsec, color = cyl)) +
  geom_point() +
  coord_3d()

# Custom rotation angles
ggplot(mtcars, aes(mpg, wt, z = qsec)) +
  geom_point() +
  coord_3d(pitch = 45, roll = 60, yaw = 15)

# Without perspective (orthographic projection)
ggplot(mtcars, aes(mpg, wt, z = qsec)) +
  geom_point() +
  coord_3d(persp = FALSE)

# Manual axis label placement
ggplot(mtcars, aes(mpg, wt, z = qsec)) +
  geom_point() +
  coord_3d(xtext = c("ymin", "zmax"), ytext = c("xmax", "zmin"))

# Use with complete themes (apply theme first)
ggplot(mtcars, aes(mpg, wt, z = qsec)) +
  geom_point() +
  theme_bw() +  # Apply complete theme first
  coord_3d()    # Then apply 3D coordinate system

}
\seealso{
\code{\link{scale_z_continuous}} for z-axis scaling,
\code{\link{theme_cube}} for 3D-specific themes
}
\concept{3D coordinate functions}
