% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/guide_colorbar_shaded.R
\name{shade_guides}
\alias{shade_guides}
\alias{guide_colorbar_shaded}
\alias{guide_legend_shaded}
\title{Shaded color guides for 3D plots}
\usage{
guide_colorbar_shaded(reverse_shade = FALSE, shade_range = c(-0.5, 0.5), ...)

guide_legend_shaded(reverse_shade = FALSE, shade_range = c(-0.5, 0.5), ...)
}
\arguments{
\item{reverse_shade}{Logical. If TRUE, reverses the lighting gradient direction. By default,
shadows are placed on the left, or on the bottom for horizontal colorbars.}

\item{...}{Additional arguments passed to \code{guide_colorbar()} or \code{guide_legend()}.}

\item{shade_limits}{Length-2 numeric vector in the range -1 to 1, giving the limits
of the shading gradient. 0 is the base color, -1 is full shade, and 1 is full
highlight. Default is c(-.5, 5).}
}
\value{
A guide object that displays shading effects
}
\description{
Creates color guides that show shading variation as gradients
within each color. Shows the full range of colors visible when
shading is enabled in 3D plots.
}
\details{
When fill and color aesthetics map to the same variable (e.g.,
\code{aes(fill = z, color = z)}), ggplot2 creates a shared scale with a
single guide. In this case, use \code{guides(fill = guide_colorbar_shaded())}
or \code{guides(fill = guide_legend_shaded())} to apply shading, even if
your layer uses the color aesthetic. Use \code{guides(color = ...)} only when color and fill map to different
variables and you want separate guides for each.
}
\examples{
# continuous `colorbar` guide
ggplot(mountain, aes(x, y, z, fill = z)) +
   stat_surface_3d(light = light(shade = "fill", shade_mode = "hsl")) +
   guides(fill = guide_colorbar_shaded()) +
   scale_fill_gradientn(colors = c("tomato", "dodgerblue")) +
   coord_3d()

# discrete `legend` guide
ggplot(mountain, aes(x, y, z, fill = x > .5, group = 1)) +
   stat_surface_3d(light = light(shade = "fill")) +
   guides(fill = guide_legend_shaded()) +
   coord_3d()
}
