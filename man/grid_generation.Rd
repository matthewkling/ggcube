% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shared-docs.R
\name{grid_generation}
\alias{grid_generation}
\title{Grid generation parameters}
\arguments{
\item{grid}{Character argument specifying geometry of grid to generate.
Options include \code{"tri"} (the default) for triangular grid, \code{"rect"} for
rectangular grid, or \code{"hex"} for hexagonal grid. Triangles produce a proper 3D
surface that can prevent lighting artifacts in places where a surface curves past
parallel with the sight line.}

\item{n}{Either a single integer specifying grid resolution in both dimensions,
or a vector of length 2 specifying \code{c(nx, ny)} for separate x and y resolutions.
Default is \code{40}. Higher values create smoother surfaces but slower rendering.}

\item{direction}{Either \code{"x"} (the default) or \code{"y"}, specifying the orientation
of tile rows. Ignored for rectangular grids.}

\item{trim}{Logical. Only relevant for triangular and hexagonal grids. If TRUE
(default), trims edge tiles to so that grid boundaries are straight lines. If
FALSE, preserves the full shape of all tiles, resulting in a grid with
irregular edges.}
}
\description{
Parameters defining the geometry, resolution, and orientation of a regular grid
of tiles, as used by various ggcube layer functions.
}
\details{
Grids are constructed such that tiles are approximately equilateral
when scaled to a square domain, unless \code{n} gives separate resolution values
for the two dimensions. For triangular and hexagonal grids, this means that
\code{n} is only approximate.
}
