% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lighting.R
\name{lighting}
\alias{lighting}
\title{Create lighting specification for 3D surface rendering}
\usage{
lighting(
  method = "diffuse",
  direction = c(1, 0, 1),
  position = NULL,
  distance_falloff = FALSE,
  fill = FALSE,
  color = FALSE,
  mode = "hsv",
  strength = 1
)
}
\arguments{
\item{method}{Character string specifying lighting model:
\itemize{
\item \code{"diffuse"}: Atmospheric lighting with soft shadows (includes negative values for subsurface scattering effect)
\item \code{"direct"}: Direct lighting with hard shadows (surfaces facing away are completely dark)
\item \code{"normal_rgb"}: Map surface normals to RGB colors
}
Default is "diffuse".}

\item{direction}{Numeric vector of length 3 specifying direction in 3D space that
light comes from for directional lighting. The default is \code{c(1, 0, 1)}, giving
diagonal lighting from the upper right edge with default rotation. Common examples: \code{c(0, 0, 1)} gives
overhead lighting, \code{c(1, 0, 0)} lights surfaces facing the positive x
direction, and \code{c(-1, -1, 0)} lights surfaces facing negative x-y edge. At least
one value must be non-zero. Values are automatically normalized, so magnitude doesn't
matter, only sign and relative magnitude.
This argument is ignored if \code{position} is provided.}

\item{position}{Numeric vector of length 3 specifying light source position in
data coordinate space for positional lighting. When specified, each face gets
its own light direction calculated from the light position to the face center.
Mutually exclusive with \code{direction}. Default is NULL (use directional lighting).}

\item{distance_falloff}{Logical indicating whether to apply distance-based
intensity falloff for positional lighting using inverse square law
(intensity ∝ 1/distance²). Only used when \code{position} is specified.
Default is FALSE.}

\item{fill}{Logical indicating whether to apply lighting effects to fill colors.
Default is FALSE.}

\item{color}{Logical indicating whether to apply lighting effects to border/line colors.
Default is FALSE.}

\item{mode}{Character string specifying color shading mode:
\itemize{
\item \code{"hsv"}: Modifies HSV value component (fades to bright colors at high end, black at low end)
\item \code{"hsl"}: Modifies HSL lightness component (fades to white at high end, black at low end)
}
Default is "hsv".}

\item{strength}{Numeric value in the range 0--1 controlling the intensity of lighting effects.
1.0 gives full black-to-white range, 0.5 gives subtle lighting effects.
Default is 1.0.}
}
\value{
A \code{lighting} object that can be passed to 3D surface stats.
}
\description{
Creates a lighting specification object that supports both directional lighting
(parallel rays like sunlight) and positional lighting (point light sources with
per-face light directions and optional distance falloff), for use with 3D polygon geoms.
}
\details{
Lighting in this package works through shading - modifying the brightness
of fill and/or color aesthetics based on computed lighting values. This approach
allows lighting effects while still using standard ggplot2 color specifications.
}
\examples{
# Default diffuse lighting (no shading)
lighting()

# Directional lighting with fill shading
lighting(method = "direct", direction = c(1, 0, 0.5), fill = TRUE)

# Rainbow normal mapping
lighting(method = "normal_rgb")

# Apply to both fill and color
lighting(fill = TRUE, color = TRUE, strength = 0.8)

# Positional lighting with distance falloff
lighting(position = c(10, 10, 20), distance_falloff = TRUE, fill = TRUE)
}
