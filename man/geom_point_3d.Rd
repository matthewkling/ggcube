% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-point-3d.R
\name{geom_point_3d}
\alias{geom_point_3d}
\title{3D scatter plot with depth-based size scaling and reference projections}
\usage{
geom_point_3d(
  mapping = NULL,
  data = NULL,
  stat = StatPoint3D,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  scale_depth = TRUE,
  raw_points = TRUE,
  ref_lines = FALSE,
  ref_points = FALSE,
  ref_faces = "zmin",
  ref_circle_radius = 1.5,
  ref_circle_vertices = 16,
  ref_line_color = NULL,
  ref_line_colour = NULL,
  ref_line_linewidth = 0.25,
  ref_line_linetype = NULL,
  ref_line_alpha = NULL,
  ref_point_color = NULL,
  ref_point_colour = NULL,
  ref_point_fill = "black",
  ref_point_size = NULL,
  ref_point_alpha = 0.5,
  ref_point_stroke = NA,
  ref_point_shape = NULL
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}}. In addition to
the standard point aesthetics, \code{geom_point_3d()} requires x, y, and z coordinates.}

\item{data}{The data to be displayed in this layer.}

\item{stat}{The statistical transformation to use on the data. Defaults to
\link{StatPoint3D} for proper discrete scale handling and reference line support.}

\item{position}{Position adjustment, defaults to "identity".}

\item{...}{Other arguments passed on to \code{\link[=layer]{layer()}}.}

\item{na.rm}{If \code{FALSE}, missing values are removed with a warning.}

\item{show.legend}{Logical indicating whether this layer should be included in legends.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics.}

\item{scale_depth}{Logical indicating whether to apply depth-based scaling
to point sizes, point stroke widths, and reference line widths.
When \code{TRUE} (default), points/lines closer to the viewer appear larger/wider, and
points farther away appear smaller. When \code{FALSE}, all points/lines have uniform size/width.}

\item{raw_points}{Logical indicating whether to show the original 3D points.
Default is \code{TRUE}.}

\item{ref_lines}{Logical indicating whether to show reference lines projecting
from points to cube faces. Default is \code{FALSE}.}

\item{ref_points}{Type of reference points to create. Options:
\itemize{
\item \code{FALSE}: No reference points (default)
\item \code{TRUE or "circles"}: Circular reference points that project properly
\item \code{"points"}: Single-point references (renders faster and supports non-circular shapes,
but point shape is not 3D-transformed)
}}

\item{ref_faces}{Character vector specifying which cube faces to project to.
Valid face names are: "xmin", "xmax", "ymin", "ymax", "zmin", "zmax".
Default is "zmin" (bottom face). Multiple faces can be specified.}

\item{ref_circle_radius}{Radius for circular reference points as percentage of standardized coordinate space.}

\item{ref_circle_vertices}{Number of vertices for circular reference points (higher = smoother).}

\item{ref_line_color, ref_line_colour, ref_line_linewidth, ref_line_linetype, ref_line_alpha}{Styling overrides for reference lines. When NULL, inherits from point aesthetics.
Both American (\code{ref_line_color}) and British (\code{ref_line_colour}) spellings are accepted.}

\item{ref_point_color, ref_point_colour, ref_point_fill, ref_point_size, ref_point_alpha, ref_point_stroke, ref_point_shape}{Styling overrides for reference points and circles. When NULL, inherits from raw point aesthetics.
\itemize{
\item For reference points: \code{ref_point_size} defaults to 1/3 of raw point size, \code{ref_point_stroke} controls border width, \code{ref_point_shape} controls point shape
\item For reference circles: \code{ref_point_stroke} controls border width, other parameters control fill/color (\code{ref_point_shape} is ignored)
}
Both American (\code{ref_point_color}) and British (\code{ref_point_colour}) spellings are accepted.}
}
\description{
\code{geom_point_3d()} creates scatter plots in 3D space with automatic depth-based
size scaling. Points closer to the viewer appear larger, while points farther
away appear smaller, creating realistic perspective effects. Optionally adds
reference lines and points projecting to cube faces.
}
\details{
The size scaling is calculated relative to the center of the 3D coordinate space
(0, 0, 0). The user-specified size represents the rendered size at this reference
point, with closer and farther points scaled proportionally based on their
distance from the viewer.
}
\section{Aesthetics}{

\code{geom_point_3d()} supports all the same aesthetics as \code{\link[=geom_point]{geom_point()}}:
\itemize{
\item \strong{x}: X coordinate (required)
\item \strong{y}: Y coordinate (required)
\item \strong{z}: Z coordinate (required for 3D positioning)
\item \code{alpha}: Transparency
\item \code{colour}: Point border color
\item \code{fill}: Point fill color (for certain shapes)
\item \code{shape}: Point shape
\item \code{size}: Point size (gets depth-scaled when \code{scale_depth = TRUE})
\item \code{stroke}: Border width for shapes with borders
}
}

\section{Depth Scaling}{

The depth scaling uses an inverse relationship with distance, following the
mathematical relationship: \code{apparent_size = base_size * reference_distance / actual_distance}

This creates realistic perspective where:
\itemize{
\item Objects twice as far appear half as big
\item Objects twice as close appear twice as big
\item The reference point (0, 0, 0) renders at exactly the user-specified size
}
}

\section{Reference Features}{

Reference lines and points help visualize the 3D relationships by projecting
data points onto cube faces:
\itemize{
\item \strong{Reference lines}: Connect each 3D point to its projection on specified faces
\item \strong{Reference points}: Show the projected location on the faces
\item \strong{Reference circles}: Circular projections that appear as realistic 3D shadows
\item \strong{Depth sorting}: All elements (original points, reference lines, reference points)
are automatically depth-sorted for proper 3D rendering
}
}

\examples{
library(ggplot2)

# Basic 3D scatter plot with depth scaling
ggplot(expand_grid(x = 1:5, y = 1:5, z = 1:5),
       aes(x, y, z, fill = z)) +
  geom_point_3d(size = 10, shape = 21, color = "white", stroke = .1) +
  coord_3d(pitch = 40, roll = 5, yaw = 0, dist = 1.5) +
  scale_fill_viridis_c()

# Add circular reference points on 2D face panel
ggplot(mtcars, aes(mpg, wt, qsec)) +
  geom_point_3d(size = 3,
    ref_points = TRUE, ref_lines = TRUE, ref_faces = "zmin") +
  coord_3d()

# Use point-style references with custom shape
ggplot(mtcars, aes(mpg, wt, qsec)) +
  geom_point_3d(ref_points = "points", ref_lines = TRUE,
                ref_point_shape = 4, ref_point_size = 2,
                ref_line_alpha = 0.5) +
  coord_3d()

# Show only circular reference projections (no original points)
ggplot(mtcars, aes(mpg, wt, qsec)) +
  geom_point_3d(raw_points = FALSE, ref_points = "circles", ref_lines = TRUE,
                ref_faces = c("zmin", "ymin")) +
  coord_3d()

# Project to multiple faces with custom circle styling
ggplot(mtcars, aes(mpg, wt, qsec, color = factor(cyl))) +
  geom_point_3d(ref_points = "circles", ref_lines = TRUE,
                ref_faces = c("zmin", "ymin", "xmax"),
                ref_line_color = "grey50", ref_line_alpha = 0.3,
                ref_point_fill = "white", ref_point_stroke = 0.8,
                ref_circle_radius = 1) +
  coord_3d()

# Disable depth scaling for uniform sizes
ggplot(mtcars, aes(mpg, wt, qsec)) +
  geom_point_3d(scale_depth = FALSE, size = 3) +
  coord_3d()

}
\seealso{
\code{\link[=geom_point]{geom_point()}} for 2D scatter plots, \code{\link[=coord_3d]{coord_3d()}} for 3D coordinate systems,
\code{\link[=stat_point_3d]{stat_point_3d()}} for the underlying statistical transformation.
}
