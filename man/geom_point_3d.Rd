% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-point-3d.R
\name{geom_point_3d}
\alias{geom_point_3d}
\title{3D scatter plot with depth-based size scaling}
\usage{
geom_point_3d(
  mapping = NULL,
  data = NULL,
  stat = StatIdentity3D,
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  scale_depth = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}}. In addition to
the standard point aesthetics, \code{geom_point_3d()} requires x, y, and z coordinates.}

\item{data}{The data to be displayed in this layer.}

\item{stat}{The statistical transformation to use on the data. Defaults to
\link{StatIdentity3D} for proper discrete scale handling and depth scaling.}

\item{position}{Position adjustment, defaults to "identity".}

\item{...}{Other arguments passed on to \code{\link[=layer]{layer()}}.}

\item{na.rm}{If \code{FALSE}, missing values are removed with a warning.}

\item{show.legend}{Logical indicating whether this layer should be included in legends.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics.}

\item{scale_depth}{Logical indicating whether to apply depth-based size scaling.
When \code{TRUE} (default), points closer to the viewer appear larger and points
farther away appear smaller. When \code{FALSE}, all points have uniform size.}
}
\description{
\code{geom_point_3d()} creates scatter plots in 3D space with automatic depth-based
size scaling. Points closer to the viewer appear larger, while points farther
away appear smaller, creating realistic perspective effects.
}
\details{
The size scaling is calculated relative to the center of the 3D coordinate space
(0, 0, 0). The user-specified size represents the rendered size at this reference
point, with closer and farther points scaled proportionally based on their
distance from the viewer.
}
\section{Aesthetics}{

\code{geom_point_3d()} supports all the same aesthetics as \code{\link[=geom_point]{geom_point()}}:
\itemize{
\item \strong{x}: X coordinate (required)
\item \strong{y}: Y coordinate (required)
\item \strong{z}: Z coordinate (required for 3D positioning)
\item \code{alpha}: Transparency
\item \code{colour}: Point border color
\item \code{fill}: Point fill color (for certain shapes)
\item \code{shape}: Point shape
\item \code{size}: Point size (gets depth-scaled when \code{scale_depth = TRUE})
\item \code{stroke}: Border width for shapes with borders
}
}

\section{Depth Scaling}{

The depth scaling uses an inverse relationship with distance, following the
mathematical relationship: \code{apparent_size = base_size * reference_distance / actual_distance}

This creates realistic perspective where:
\itemize{
\item Objects twice as far appear half as big
\item Objects twice as close appear twice as big
\item The reference point (0, 0, 0) renders at exactly the user-specified size
}
}

\examples{
library(ggplot2)

# Basic 3D scatter plot with depth scaling
ggplot(expand_grid(x = 1:5, y = 1:5, z = 1:5),
       aes(x, y, z, fill = z)) +
  geom_point_3d(size = 5, shape = 21, color = "darkblue") +
  coord_3d(pitch = 40, roll = 5, yaw = 0, dist = 1.25) +
  scale_fill_viridis_c()

# Disable depth scaling for uniform point sizes
# (this gives the same behavior as using ggplot2::geom_point)
ggplot(mtcars, aes(mpg, wt, qsec)) +
  geom_point_3d(scale_depth = FALSE, size = 3) +
  coord_3d(dist = 1.5)

# Works with discrete scales
ggplot(expand_grid(x = 1:4, y = letters[5:8], z = letters[1:4]), aes(x, y, z)) +
  geom_point_3d(size = 5, shape = 21, fill = "lightblue", color = "darkblue") +
  coord_3d(dist = 1.5)

}
\seealso{
\code{\link[=geom_point]{geom_point()}} for 2D scatter plots, \code{\link[=coord_3d]{coord_3d()}} for 3D coordinate systems,
\code{\link[=stat_identity_3d]{stat_identity_3d()}} for the underlying statistical transformation.
}
