% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-pillar-3d.R
\name{geom_pillar_3d}
\alias{geom_pillar_3d}
\alias{stat_pillar_3d}
\title{3D pillars from grid data}
\usage{
geom_pillar_3d(
  mapping = NULL,
  data = NULL,
  stat = StatPillar3D,
  position = "identity",
  ...,
  width = 1,
  faces = "all",
  zmin = NULL,
  light = NULL,
  cull_backfaces = TRUE,
  sort_method = NULL,
  scale_depth = TRUE,
  force_convex = FALSE,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

stat_pillar_3d(
  mapping = NULL,
  data = NULL,
  geom = GeomPolygon3D,
  position = "identity",
  ...,
  width = 1,
  faces = "all",
  zmin = NULL,
  light = NULL,
  cull_backfaces = TRUE,
  sort_method = NULL,
  scale_depth = TRUE,
  force_convex = FALSE,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}}.}

\item{data}{The data to be displayed in this layer.}

\item{stat}{The statistical transformation to use on the data. Defaults to \code{StatPillar3D}.}

\item{position}{Position adjustment, defaults to "identity". To collapse the result
onto one 2D surface, use \code{position_on_face()}.}

\item{...}{Other arguments passed on to the the layer function (typically GeomPolygon3D), such as
aesthetics like \code{colour}, \code{fill}, \code{linewidth}, etc.}

\item{width}{Numeric value controlling box width as a fraction of grid spacing.
Default is 1.0 (volumes touch each other). Use 0.8 for small gaps, 1.2 for overlap.
Grid spacing is determined automatically using \code{\link[=resolution]{resolution()}}.}

\item{faces}{Character vector specifying which faces to render. Options:
\itemize{
\item \code{"all"} (default): Render all 6 faces
\item \code{"none"}: Render no faces
\item Vector of face names: \code{c("zmax", "xmin", "ymax")}, etc.
}
Valid face names: "xmin", "xmax", "ymin", "ymax", "zmin", "zmax".
Note that this setting acts jointly with backface culling, which removes faces whose
interior faces the viewer -- e.g., when \code{cull_backfaces = TRUE} and \code{faces = "all"}
(the default), only front faces are rendered.}

\item{zmin}{Base level for all pillars. When provided as a parameter, overrides any
\code{zmin} aesthetic mapping. If \code{NULL} (default), uses the \code{zmin} aesthetic
if mapped, otherwise defaults to the minimum \code{z} value in the data.}

\item{light}{A lighting specification object created by \code{\link[=light]{light()}} (see that function for details),
or \code{NULL} to disable shading. Specify plot-level lighting in \code{coord_3d()} and layer-specific
lighting in \verb{geom_*3d()} functions.}

\item{cull_backfaces, sort_method, force_convex, scale_depth}{Advanced polygon
rendering parameters. See \link{polygon_rendering} for details.}

\item{na.rm}{If \code{FALSE}, missing values are removed.}

\item{show.legend}{Logical indicating whether this layer should be included in legends.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics.}

\item{geom}{The geometric object used to display the data. Defaults to \code{GeomPolygon3D}.}
}
\value{
A \code{Layer} object that can be added to a ggplot.
}
\description{
Creates 3D pillars from regular grid data in which x and y fall on a regular grid.
Works with both complete and sparse grid data. Each data point becomes a rectangular
3D column extending from a base level to the data value.
}
\details{
Note that pillar geometries often require pairwise depth sorting for correct rendering.
This is the default for smaller data sets, but not for larger data sets due to compute speed;
in those cases you may wish to manually specify \code{sort_method = "pairwise"} for good results.
}
\section{Aesthetics}{

\code{stat_pillar_3d()} requires the following aesthetics:
\itemize{
\item \strong{x}: X coordinate (grid position)
\item \strong{y}: Y coordinate (grid position)
\item \strong{z}: Z coordinate (pillar top height)
}

And optionally understands:
\itemize{
\item \strong{zmin}: Base level for each pillar (can be overridden by the \code{zmin} parameter)
}
}

\section{Computed variables}{

\itemize{
\item \code{normal_x}, \code{normal_y}, \code{normal_z}: Face normal components
\item \code{pillar_id}: Sequential pillar number
\item \code{face_type}: Face name ("zmax", "xmin", etc.)
}
}

\examples{
# Basic 3D bar chart from regular grid
d <- expand.grid(x = 1:5, y = 1:5)
d$z <- d$x + d$y + rnorm(25, 0, 0.5)
ggplot(d, aes(x, y, z)) +
  geom_pillar_3d() +
  coord_3d()

# Set uniform base level using `zmin` parameter
ggplot(d, aes(x, y, z)) +
  geom_pillar_3d(aes(fill = z), color = "white",
                zmin = 0) +
  coord_3d(roll = 90)

# Set variable base levels using `zmin` aesthetic
d$base_level <- runif(nrow(d), -1, 1)
ggplot(d, aes(x, y, z = z, zmin = base_level)) +
  geom_pillar_3d(color = "black") +
  coord_3d(roll = 90)

# Show only a subset of pillar faces
ggplot(d, aes(x, y, z)) +
  geom_pillar_3d(faces = c("zmax", "ymin"),
    cull_backfaces = FALSE,
    fill = "steelblue", color = "black") +
  coord_3d()

# With gaps between pillars
ggplot(d, aes(x, y, z)) +
  geom_pillar_3d(color = "black", width = 0.6) +
  coord_3d()

}
\seealso{
\code{\link[=stat_surface_3d]{stat_surface_3d()}} for smooth surface rendering, \code{\link[=coord_3d]{coord_3d()}} for 3D coordinate systems,
\code{\link[=light]{light()}} for lighting specifications, \link{GeomPolygon3D} for the default geometry.
}
