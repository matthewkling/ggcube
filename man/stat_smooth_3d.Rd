% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-smooth-3d.R
\name{stat_smooth_3d}
\alias{stat_smooth_3d}
\title{3D smooth surface from scattered data}
\usage{
stat_smooth_3d(
  mapping = NULL,
  data = NULL,
  geom = GeomSmooth3D,
  position = "identity",
  method = "loess",
  formula = NULL,
  method.args = list(),
  xlim = NULL,
  ylim = NULL,
  n = 30,
  se = FALSE,
  level = 0.95,
  se.fill = NULL,
  se.colour = NULL,
  se.color = NULL,
  se.alpha = 0.5,
  se.linewidth = NULL,
  light = lighting(),
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  ...
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}}. This stat
requires \code{x}, \code{y}, and \code{z} aesthetics from the input data. By default, fill is
mapped to \code{after_stat(fitted)}.}

\item{data}{The data to be displayed in this layer. Must contain x, y, z columns.}

\item{geom}{The geometric object to use display the data. Defaults to
\link{GeomPolygon3D} for proper 3D depth sorting.}

\item{position}{Position adjustment, defaults to "identity".}

\item{method}{Smoothing method to use. Currently supported:
\itemize{
\item \code{"loess"} (default): Local polynomial regression
\item \code{"lm"}: Linear model
\item \code{"glm"}: Generalized linear model
\item \code{"gam"}: Generalized additive model (requires \code{mgcv} package)
}}

\item{formula}{Model formula. If \code{NULL} (default), uses method-appropriate defaults:
\code{z ~ x + y} for lm and glm, \code{z ~ s(x) + s(y)} for gam, auto for loess.}

\item{method.args}{List of additional arguments passed to the fitting function.
For loess, this might include \code{span} or \code{degree}. For lm, this might include \code{weights}.
For glm, this might include \code{family} (defaults to \code{gaussian()}). For gam, this might
include smoothing parameters or basis specifications.}

\item{xlim, ylim}{Numeric vectors of length 2 giving the range for prediction grid.
If \code{NULL} (default), uses the exact data range with no extrapolation, following
\code{\link[=geom_smooth]{geom_smooth()}} conventions.}

\item{n}{Either a single integer specifying grid resolution in both dimensions,
or a vector of length 2 specifying \code{c(nx, ny)} for different resolutions.
Default is 30. Higher values create smoother surfaces but slower rendering.}

\item{se}{Logical indicating whether to display confidence interval bands around
the smooth; if \code{TRUE}, these are rendered as additional surfaces; they inherit
aesthetics from the primary smooth layer unless otherwise specified.
Defaults to \code{FALSE}.}

\item{level}{Level of confidence interval to use (0.95 by default).}

\item{se.fill}{Fill colour for confidence interval bands. If \code{NULL}, inherits from
the main surface \code{fill} aesthetic.}

\item{se.colour, se.color}{Colour for confidence interval band borders. If \code{NULL},
inherits from the main surface \code{colour} aesthetic.}

\item{se.alpha}{Alpha transparency for confidence interval bands. Defaults to 0.5.}

\item{se.linewidth}{Line width for confidence interval band borders. If \code{NULL},
inherits from the main surface \code{linewidth} aesthetic.}

\item{light}{A lighting specification object created by \code{\link[=lighting]{lighting()}}}

\item{na.rm}{If \code{TRUE}, removes missing values before fitting the model.
If \code{FALSE}, missing values will cause an error. Default is \code{FALSE}.}

\item{show.legend}{Logical indicating whether this layer should be included in legends.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics.}

\item{...}{Other arguments passed on to \code{\link[=layer]{layer()}}, such as \code{colour}, \code{fill},
\code{linewidth}, etc..}
}
\description{
Creates 3D surfaces by fitting smooth models to scattered (x,y,z) data points.
The fitted model is evaluated on a regular grid and rendered as a 3D surface
with optional standard error surfaces and lighting effects.
}
\section{Aesthetics}{

\code{stat_smooth_3d()} requires the following aesthetics from input data:
\itemize{
\item \strong{x}: X coordinate
\item \strong{y}: Y coordinate
\item \strong{z}: Z coordinate (response variable to be smoothed)
}
}

\section{Computed variables}{

\itemize{
\item \code{x}, \code{y}, \code{z}: Grid coordinates and smoothed predictions
\item \code{fitted}: Smoothed predictions (same as \code{z} when \code{level == "fitted"})
\item \code{se}: Standard errors of the fitted values (available when \code{se = TRUE})
\item \code{level}: Type of surface ("fitted", "upper CI", or "lower CI" for confidence bands)
\item \code{light}: Computed lighting value (numeric for most methods, hex color for \code{normal_rgb})
\item \code{normal_x}, \code{normal_y}, \code{normal_z}: Surface normal components
\item \code{slope}: Gradient magnitude from surface calculations
\item \code{aspect}: Direction of steepest slope from surface calculations
\item \code{dzdx}, \code{dzdy}: Partial derivatives from surface calculations
}
}

\examples{
library(ggplot2)

# Generate scattered 3D data
set.seed(123)
d <- data.frame(
  x = runif(100, -2, 2),
  y = runif(100, -2, 2)
)
d$z <- abs(1 + d$x^2 - d$y^2 + rnorm(100, 0, 1))

# Base plot
p <- ggplot(d, aes(x, y, z)) + coord_3d()

# Basic smooth surface with default loess model
p + stat_smooth_3d()

# Linear model surface with 90\% confidence intervals
p + stat_smooth_3d(method = "lm", se = TRUE, level = 0.9)

# Linear model surface with custom model formula
p + stat_smooth_3d(method = "lm",
       formula = z ~ poly(x, 2) + poly(y, 2) + x:y)

# Loess with custom span parameter, and lighting aesthetics
p + stat_smooth_3d(method = "loess", method.args = list(span = 0.3),
                 fill = "steelblue", color = "white",
                 light = lighting(blend = "both"))

# GLM with Gamma family for positive data
p + stat_smooth_3d(
      method = "glm",
      method.args = list(family = Gamma(link = "log")),
      formula = z ~ poly(x, 2) + poly(y, 2),
      light = lighting(blend = "both", blend_mode = "hsl", blend_strength = .8))

# GAM with default smoothers, with fill colored by uncertainty layer
p + stat_smooth_3d(aes(fill = after_stat(level)),
                   method = "gam", se = TRUE, color = "black") +
  scale_fill_manual(values = c("red", "darkorchid4", "steelblue"))

# Color surface bands by uncertainty
p + stat_smooth_3d(aes(fill = after_stat(se * 2)), se = T) +
  scale_fill_viridis_c()

# Extend surface beyond data range (explicit extrapolation)
p + stat_smooth_3d(method = "lm",
                 xlim = c(-3, 3), ylim = c(-3, 3))

# Project 2D views of the surface onto face panels
ggplot(mtcars, aes(mpg, disp, qsec)) +
  stat_smooth_3d(position = position_on_face(faces = c("xmax", "ymin", "zmin"))) +
  scale_fill_viridis_c() +
  coord_3d()

}
\seealso{
\code{\link[=stat_surface]{stat_surface()}} for surfaces from existing grid data,
\code{\link[=stat_function_3d]{stat_function_3d()}} for mathematical function surfaces,
\code{\link[=lighting]{lighting()}} for lighting specifications, \code{\link[=coord_3d]{coord_3d()}} for 3D coordinate systems.
}
