% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/position-on-face.R
\name{position_on_face}
\alias{position_on_face}
\title{Position for projecting 2D layers onto 3D cube faces}
\usage{
position_on_face(face = "zmin", axes = c("x", "y"))
}
\arguments{
\item{face}{Character string specifying which cube face to project onto.
Valid options are: "xmin", "xmax", "ymin", "ymax", "zmin", "zmax".}

\item{axes}{Character vector of length 2 specifying which 3D dimensions the
2D layer's x and y aesthetics represent. For example, \code{c("x", "z")} means
the 2D x-axis maps to the 3D x-axis and the 2D y-axis maps to the 3D z-axis.
Default is \code{c("x", "y")}.}
}
\description{
\code{position_on_face()} enables 2D ggplot2 layers to be projected onto faces of the 3D
coordinate cube. This position adjustment adds the necessary z-coordinate and projection
metadata to allow 2D statistical transformations (like density estimation or contouring)
to be displayed on the faces of a 3D plot.
}
\details{
This position adjustment works by:
\enumerate{
\item Renaming the 2D layer's x,y columns to match the specified 3D axes
\item Adding the missing third dimension with NA values
\item Adding projection metadata that coord_3d uses to place the layer on the face
}

The actual projection happens during coordinate transformation in coord_3d,
which replaces the NA values with the appropriate face position.
}
\examples{
# Project an x-y density contour onto the bottom face (z-minimum)
ggplot(iris) +
  stat_density_2d(aes(Sepal.Length, Sepal.Width),
                  position = position_on_face(face = "zmin", axes = c("x", "y"))) +
  geom_point_3d(aes(Sepal.Length, Sepal.Width, Petal.Length)) +
  coord_3d()

ggplot(mtcars) +
geom_smooth(aes(mpg, qsec), color = "red", alpha = .5, se = F,
    position = position_on_face(face = "ymin", axes = c("x", "z"))) +
  stat_density_2d(aes(mpg, wt), color = "blue", alpha = .5,
    position = position_on_face(face = "zmin", axes = c("x", "y"))) +
  geom_path(aes(wt, qsec), color = "forestgreen", alpha = .5,
    position = position_on_face(face = "xmax", axes = c("y", "z"))) +
    geom_point_3d(aes(mpg, wt, qsec)) +
    coord_3d() +
    theme_light()

}
\seealso{
\code{\link[=coord_3d]{coord_3d()}} for 3D coordinate systems, \code{\link[=stat_density_2d]{stat_density_2d()}} and other
2D statistical transformations that can be projected onto faces.
}
